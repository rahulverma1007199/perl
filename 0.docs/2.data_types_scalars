scalars are single unit of data -- meaing they can hold of one of undefined number, decimal number, string or reference.
To define use $ sign.
we can't redefine a varibale and they are case sensitive 
to concatinate use -- . (dot); to use special char like \n or \t use them in ""

DEBUGING
use Data::Dumper; -- you don;t use to install this seprately unless you are not using pro version 5.36 or above.
so when we use above we get a power debugging method  called dumper.
print Dumber(); //anything that put in the bracks will debug in terminal
like 
my $a = 'hello';
my $b = 22.32;
print Dumper($a , $b);

run the script.
this is not that big deal for simpler datatype like string or int but for array, reference they are a big deal.


#arrays
Array is a data type that holds order list of values and these values can be strings,numbers, decimals and references.
Note -- list and array often refers as they are same but list is the data you assign to array and array is the actual variable.

to create
my @test = ();

qw -- vault board 

my @test = (11,'test','121',0.122);  //print this in variable in dumper
my @test = qw/one two three four haha seven/; // this is handy for single word string

to access a value = $test[0];
to override = $test[2] = 'anythin'; // you can do like $test[10] = 'haha'; and in between values will be undefined
to access last valye = $test[-1]; // -2 for second last and so on.

my $size = @test; // here we are assign a list to scaler but scaler can't hold a list it holds single value -- try debugging it